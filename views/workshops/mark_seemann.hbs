{{#contentFor "outsidePageWrap"}}
  <header class="site-intro">
  	<img class="site-intro-image"
		 src="/images/TripleT_logo.svg"
		 alt="TripleT Logo" />
  </header>
{{/contentFor}}

<section>
	<header>
		<h1 class="group-title">Workshop by Mark Seemann</h1>
	</header>

	<div>
    <section class="article-highlight">
			<div class="highlight-content">
				<h1 class="highlight-heading">Workshop details</h1>
				<p class="u-left-aligned-content">
          <b>Topic:</b> From design patterns to category theory<br>
          <b>Where:</b> <a href="https://goo.gl/maps/QVuDBqdq2DP2" target="_blank">Hotel Klaus K, Bulevardi 2-4 00120 Helsinki</a>
          <br>
          <b>When:</b> 21.11.2017, 9:00 – 17:00
        </p>
			</div>
			<!--<a href="/about" class="button highlight-action-link">More about me</a>-->
		</section>
		<section class="article-highlight">
			<img class="article-highlight-image" src="https://triplet-assets.s3.amazonaws.com/workshops/mark_seemann_portrait.jpg" alt="Mark Seemann">
			<div class="highlight-content">
				<h1 class="highlight-heading">Mark Seemann
					<span class="highlight-subheading">Programmer and Software Architech from Copenhagen, Denmark</span>
				</h1>
				<p>Mark Seemann helps programmers make code easier to maintain. His professional interests include functional programming, object–oriented development, software architecture, as well as software development in general. Apart from writing a book about Dependency Injection he has also created several Pluralsight courses, and written numerous articles and blog posts about programming.</p>
			</div>
			<!--<a href="/about" class="button highlight-action-link">More about me</a>-->
		</section>

    <section class="text-highlight">
      <div class="highlight-content">
        <h1 class="highlight-heading">Topic</h1>
        <p class="u-left-aligned-content">Would you like to write readable code? Code that you can understand a year later? Code that your co-workers can understand?</p>
        <p class="u-left-aligned-content">If so, you need to use good abstractions in your source code. What makes an abstraction good? How do you arrive at good abstractions?</p>
        <p class="u-left-aligned-content">Most programmers try to ‘invent’ abstractions from scratch. This is an elusive goal. It requires a level of foresight rarely available. What if, instead, you could use existing, universal abstractions?</p>
        <p class="u-left-aligned-content">For decades, programmers have dreamt of being able to assemble software from building blocks, like Lego bricks. In order to do this, such building blocks must be composable, like Lego bricks. What makes an abstraction composable? It turns out that category theory can teach us about composability. Furthermore, it turns out that some of the most important structural design patterns in the Gang of Four book are special cases of categories.</p>
        <p class="u-left-aligned-content">Category theory is a branch of mathematics, and so includes objective laws. You can use those laws to determine whether an abstraction is composable – even in object-oriented programming!</p>
      </div>
    </section>
    <section class="text-highlight">
      <div class="highlight-content">
        <h1 class="highlight-heading">The aim of the workshop</h1>
        <p class="u-left-aligned-content">In this workshop, you’ll learn some objective criteria to determine whether a design is composable. No special background in mathematics is required.</p>
        <p class="u-left-aligned-content">The workshop will include a combination of lecture and exercises, including hands-on programming exercises. You’ll need to bring your own programming environment capable of compiling and running C# code. The fanciest C# features you’ll use is generics, so programmers with only passing familiarity with C# may be able to participate as well.</p>
        <p class="u-left-aligned-content">This workshop is for object-oriented programmers curious about category theory and functional programming. You’ll see F# and Haskell code examples during the workshop, but you don’t have to know these language; you’ll learn what you need along the way.</p>
        <p class="u-left-aligned-content">Successful participation in the workshop should enable you to use universal abstractions in your source code. As always, no silver bullet is implied. You will learn about universal abstractions, but it will not magically make all your code instantly perfect.</p>
      </div>
    </section>

    <section class="call-to-action">
      <h1 class="call-to-action-header">
        <a href="https://holvi.com/shop/triplet/">Buy tickets</a>
      </h1>
    </section>
	</div>
</section>